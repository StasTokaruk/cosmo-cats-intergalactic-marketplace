openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/products/{id}:
    get:
      tags:
        - product-controller
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDetailDTO'
    put:
      tags:
        - product-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDTO'
    delete:
      tags:
        - product-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/products:
    get:
      tags:
        - product-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAvailabilityDTO'
    post:
      tags:
        - product-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDTO'
  /api/orders:
    get:
      tags:
        - order-controller
      operationId: getAll_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
    post:
      tags:
        - order-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderDTO'
  /api/carts:
    get:
      tags:
        - cart-controller
      operationId: getAll_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartDTO'
    post:
      tags:
        - cart-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CartDTO'
  /api/orders/{id}:
    get:
      tags:
        - order-controller
      operationId: getById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderDTO'
    delete:
      tags:
        - order-controller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/carts/{id}:
    get:
      tags:
        - cart-controller
      operationId: getById_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CartDTO'
    delete:
      tags:
        - cart-controller
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
components:
  schemas:
    CategoryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - name
    ProductDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
        category:
          $ref: '#/components/schemas/CategoryDTO'
        description:
          type: string
        quantity:
          type: number
          format: double
      required:
        - category
        - description
        - name
        - price
        - quantity
    OrderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailDTO'
        totalPrice:
          type: number
          format: double
    ProductDetailDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          $ref: '#/components/schemas/CategoryDTO'
        description:
          type: string
      required:
        - category
        - description
        - name
    CartDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailDTO'
        totalPrice:
          type: number
          format: double
    ProductAvailabilityDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        quantity:
          type: number
          format: double
      required:
        - name
        - quantity
